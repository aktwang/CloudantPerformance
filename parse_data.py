#! /usr/bin/python

# this file parses data generated by : sar -b -u -r -d 3 (sample every 3s)
import re
def main():
  infile = open("sar-result.txt","r")
  content = infile.read()
  infile.close()
  cpu_line = re.compile(".*all.*")
  disk_line = re.compile(".*dev8-16.*")
  memory_line = re.compile(".*kbmemfree.*")
  lines = content.split('\n')

  found_memory = False
  time_begin = ""
  time_end = ""

  counter = 0

  #print "time CPU%user CPU%iowait %memused IO-read(kB/s) IO-write(kB/s)\n"
  for line in lines:
    # match CPU utilization
    match = cpu_line.match(line)
    if match:
      tokens = line.split()
      user = tokens[3]
      iowait = tokens[6]
      time_begin = tokens[0]
    # match disk utilization
    match = disk_line.match(line)
    if match:
      tokens = line.split()
      rd_sec = tokens[4]
      wr_sec = tokens[5]
      time_end = tokens[0]
    # match memory utilization
    if found_memory:
        found_memory = False
        tokens = line.split()
        memused = tokens[4]
    match = memory_line.match(line)
    if match:
      found_memory = True
     
    # print report
    if time_begin == time_end and time_begin != "":
      print counter, " ", user, " ", iowait, " ", memused, " ", round((float(rd_sec)*512)/1024,2), " ", round((float(wr_sec)*512)/1024,2)
      time_begin = ""
      time_end = ""
      counter = counter + 1
main()

